# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
from __future__ import annotations

import os
import re
import sys

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from sphinx.application import Sphinx as App

sys.setrecursionlimit(15000)

sys.path.insert(0, os.path.abspath('..'))
sys.path.append(os.path.abspath('extensions'))

# -- Project information -----------------------------------------------------


project = 'discord.py-message-components'
copyright = '2023, Mathieu Corsham aka. mccoder.py'
author = 'Mathieu Corsham aka. mccoder.py'

version = ''
with open('../discord/__init__.py') as f:
    version += re.search(
        r'^__version__\s*=\s*[\'"]([^\'"]*)[\'"]', f.read(), re.MULTILINE
    )[1]

# The full version, including alpha/beta/rc tags.
release = version

# This assumes a tag is available for final releases
branch = 'developer' if version.endswith('a') else f'v{version}'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.

extensions = [
    'builder',
    'sphinx.ext.autodoc',
    'sphinx.ext.extlinks',
    'sphinx.ext.intersphinx',
    'sphinxcontrib.contentui',
    'sphinx.ext.napoleon',
    'sphinxext.opengraph',
    'sphinxcontrib_trio',
    'details',
    'exception_hierarchy',
    'attributetable',
    'resourcelinks',
]

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

autodoc_member_order = 'bysource'
autodoc_default_flags = ['members']
autodoc_typehints = 'none'
autoclass_content = 'both'  # document class docstring and __init__ docstring

# Links used for cross-referencing stuff in other documentation
intersphinx_mapping = {
    'py': ('https://docs.python.org/3', None),
    'aio': ('https://docs.aiohttp.org/en/stable/', None),
    'req': ('http://docs.python-requests.org/en/latest/', 'requests.inv')
}

html_context = {
    'discord_invite': 'https://discord.gg/sb69muSqsg',
    'discord_extensions': [
        ('discord.ext.commands', 'ext/commands'),
        ('discord.ext.tasks', 'ext/tasks'),
        ('discord.oauth2', 'oauth2')
    ],
    'github_url': 'https://github.com/mccoderpy/discord.py-message-components'
}

resource_links = {
    'discord': 'https://discord.gg/sb69muSqsg',
    'issues': 'https://github.com/mccoderpy/discord.py-message-components/issues',
    'discussions': 'https://github.com/mccoderpy/discord.py-message-components/discussions',
    'examples': f'https://github.com/mccoderpy/discord.py-message-components/tree/{branch}/examples',
}

ogp_site_url = 'https://docs.discord4py.dev/'
ogp_image = f'https://docs.discord4py.dev/en/{branch}/_images/discord4py-logo.png'
ogp_site_name = 'docs.discord4py.dev'

ogp_custom_meta_tags = [
    '<meta name="theme-color" content="#5865F2">'
]
ogp_enable_meta_description = True

show_authors = True
html_last_updated_fmt = '%b %d %Y'
html_permalinks_icon = '<span class="fa fa-link" aria-hidden="true"></span>'
# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
# html_theme_options = {
# }

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
# html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = '../images/Banner_Konturen.png'

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = './images/discord4py-logo.ico'

extlinks = {
    'issue': ('https://github.com/mccoderpy/discord.py-message-components/issues/%s', 'GH-%s'),
    'old-issue': ('https://github.com/Rapptz/discord.py/issues/%s', 'GH-%s')
}

rst_prolog = """
:tocdepth: 3

.. |coro| replace:: This function is a |coroutine_link|_.
.. |maybecoro| replace:: This function *could be a* |coroutine_link|_.
.. |coroutine_link| replace:: *coroutine*
.. _coroutine_link: https://docs.python.org/3/library/asyncio-task.html#coroutine
.. |bugreport| replace:: |bugreport_link|_
.. |bugreport_link| replace:: *bug report*
.. _bugreport_link: https://discord4py.dev/bugreport
"""

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'basic'

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
html_search_scorer = '_static/scorer.js'

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'friendly'

html_js_files = [
    'custom.js',
    'settings.js',
    'copy.js',
    'sidebar.js',
]

# The master toctree document.
master_doc = 'index'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


def setup(app: App):
    app.setup_extension("sphinxext.opengraph")
    app.add_css_file('style.css')
